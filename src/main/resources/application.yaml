
server.servlet.context-path: /finn-kandidat-api

management.endpoints.web:
  exposure.include: info, health, metrics, prometheus
  base-path: /internal/actuator

spring.profiles.active: local, mock

---
spring.profiles: local

spring.h2.console:
  enabled: true
  path: /h2

no.nav.security.oidc:
  issuers: isso
  issuer.isso:
      discoveryurl: http://metadata-isso
      accepted_audience: aud-isso

mock:
  port: 8081
  baseUrl: http://localhost:${mock.port}

sts.url: ${mock.baseUrl}/sts
veilarbabac.url: ${mock.baseUrl}/veilarbabac
abac.url: ${mock.baseUrl}/abac

SERVICEBRUKER_BRUKERNAVN: na
SERVICEBRUKER_PASSORD: na

spring:
  kafka:
    consumer:
      group-id: finn-kandidat
---

spring:
  profiles: kafka-test
  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}

---
spring:
  profiles: dev
  kafka:
    bootstrap-servers: b27apvl00045.preprod.local:8443, b27apvl00046.preprod.local:8443, b27apvl00047.preprod.local:8443
    client-id: finn-kandidat-api-dev
    properties:
      security.protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${SERVICEBRUKER_BRUKERNAVN}" password="${SERVICEBRUKER_PASSORD}";
      ssl.truststore:
        location: ${javax.net.ssl.trustStore}
        password: ${javax.net.ssl.trustStorePassword}
    consumer:
      group-id: finn-kandidat-api-dev
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer



database:
  navn: finn-kandidat-dev
  url: jdbc:postgresql://b27dbvl007.preprod.local:5432/finn-kandidat-dev

vault.mount-path: postgresql/preprod-fss

no.nav.security.oidc:
  issuers: isso
  issuer.isso:
      discoveryurl: https://login.microsoftonline.com/NAVQ.onmicrosoft.com/.well-known/openid-configuration
      accepted_audience: 38e07d31-659d-4595-939a-f18dce3446c5

sts.url: https://security-token-service.nais.preprod.local/rest/v1
veilarbabac.url: https://veilarbabac-q1.nais.preprod.local
abac.url: https://wasapp-q1.adeo.no/asm-pdp/authorize
aktørregister.url: https://app-q0.adeo.no/aktoerregister

---
spring:
  profiles: prod
  kafka:
    bootstrap-servers: a01apvl00145.adeo.no:8443, a01apvl00146.adeo.no:8443, a01apvl00147.adeo.no:8443, a01apvl00148.adeo.no:8443, a01apvl00149.adeo.no:8443, a01apvl00150.adeo.no:8443
    client-id: finn-kandidat-api-prod
    properties:
      security.protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${SERVICEBRUKER_NAVN}" password="${SERVICEBRUKER_PASSORD}";
      ssl.truststore:
        location: ${javax.net.ssl.trustStore}
        password: ${javax.net.ssl.trustStorePassword}
    consumer:
      group-id: finn-kandidat-api-prod
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

database:
  navn: finn-kandidat-prod
  url: jdbc:postgresql://a01dbfl039.adeo.no:5432/finn-kandidat-prod

vault.mount-path: postgresql/prod-fss

no.nav.security.oidc:
  issuers: isso
  issuer.isso:
      discoveryurl: https://login.microsoftonline.com/navno.onmicrosoft.com/.well-known/openid-configuration
      accepted_audience: 9b4e07a3-4f4c-4bab-b866-87f62dff480d

sts.url: https://security-token-service.nais.adeo.no/rest/v1
veilarbabac.url: https://veilarbabac.nais.adeo.no
abac.url: https://wasapp.adeo.no/asm-pdp/authorize
aktørregister.url: https://app.adeo.no/aktoerregister
