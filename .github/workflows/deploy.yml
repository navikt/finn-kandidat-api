name: Build & deploy

on: [ push ]

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/finn-kandidat-api:${{ github.sha }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '13.x'
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Run tests
        run: mvn test -P external

  deploy-to-dev:
    name: Deploy to dev
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/synlighet'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '13.x'
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Build jar with Maven
        run: mvn clean package -P external -D maven.test.skip=true
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          docker push ${IMAGE}
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          VAR: version=${{ env.IMAGE }}
          RESOURCE: nais/nais-dev.yaml

  deploy-to-prod:
    name: Deploy to prod
    needs: deploy-to-dev
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          VAR: version=${{ env.IMAGE }}
          RESOURCE: nais/nais-prod.yaml

  deploy-alerts:
    name: Deploy alerts to prod
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: nais/alerts.yaml
